name: Run Paparazzi unit tests

on:
  workflow_call:
    inputs:
      is_gradle_cache_debug_enabled:
        description: "Enable or disable Gradle build cache"
        type: boolean
        default: true
        required: false
      java_version:
        description: "Java language version"
        type: string
        default: true
        required: true
      flavor_build_type:
        description: "Flavor and build type for paparazzi task"
        type: string
        required: true
        default: "Debug"
    secrets:
      github_access_token:
        required: true
      maven_readonly_token:
        required: true

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run_paparazzin_unit_tests:
    runs-on: ubuntu-20.04
    steps:
      - name: Cancel previous runs
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          all_but_latest: true
          access_token: ${{ secrets.github_access_token }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ inputs.java_version }}

      - name: Setup task names
        run: |
          # Создаем env-переменные VERIFY_PAPARAZZI_TASK и $RECORD_PAPARAZZI_TASK
          echo "VERIFY_PAPARAZZI_TASK=verifyPaparazzi${{ inputs.flavor_build_type }}" >> "GITHUB_ENV"
          echo "$RECORD_PAPARAZZI_TASK=recordPaparazzi${{ inputs.flavor_build_type }}" >> "GITHUB_ENV"

      - name: Run tests
        uses: gradle/gradle-build-action@v2
        with:
          arguments: $VERIFY_PAPARAZZI_TASK
          cache-read-only: ${{ github.ref != 'refs/heads/master' && github.ref != 'refs/heads/main' && github.ref != 'refs/heads/release' && github.ref != 'refs/heads/develop' }}
        env:
          MAVEN_READONLY_TOKEN: ${{ secrets.maven_readonly_token }}
          GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: ${{ inputs.is_gradle_cache_debug_enabled }}

      - name: Process failed tests
        if: failure()
        id: failed-screenshots
        run: |
          ./gradlew $RECORD_PAPARAZZI_TASK
          
          PR_NUMBER=${GITHUB_REF#refs/pull/}
          PR_NUMBER=${PR_NUMBER/\/merge/}
          NEW_BRANCH_NAME="snapshots/pr-$PR_NUMBER"
          
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git fetch --all
          git checkout --track "origin/$PR_BRANCH"
          git checkout -b "$NEW_BRANCH_NAME"
          git add -A
          git commit -m "Update screenshots"
          git push --force "https://$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git"
          
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_OUTPUT
          echo "PR_COMMENT=\"Screenshot tests failed.\\n\\n[See differences](https://github.com/$GITHUB_REPOSITORY/compare/$PR_BRANCH...$NEW_BRANCH_NAME)\\n\\nMerge the branch if it's an intentional change.\"" >> $GITHUB_OUTPUT
        env:
          MAVEN_READONLY_TOKEN: ${{ secrets.maven_readonly_token }}
          GRADLE_BUILD_ACTION_CACHE_DEBUG_ENABLED: ${{ inputs.is_gradle_cache_debug_enabled }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          PR_BRANCH: ${{ github.head_ref }}

      - name: Comment PR if tests failed
        uses: octokit/request-action@v2.x
        if: always() && steps.failed-screenshots.outputs.PR_COMMENT
        with:
          route: POST /repos/:repo/issues/:issue_number/comments
          repo: ${{ github.repository }}
          issue_number: ${{ steps.failed-screenshots.outputs.PR_NUMBER }}
          body: ${{ steps.failed-screenshots.outputs.PR_COMMENT }}