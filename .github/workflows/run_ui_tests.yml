name: Run UI tests on farm

on:
  workflow_call:
    inputs:
      run_ptt:
        type: boolean
        required: false
        default: false
      run_avia:
        type: boolean
        required: false
        default: false
      run_bus:
        type: boolean
        required: false
        default: false
      run_train:
        type: boolean
        required: false
        default: false
      branch:
        required: false
        type: string
        default: ""
      upload_test_results:
        required: false
        type: boolean
        default: false
      record_snapshots:
        required: false
        type: boolean
        default: false
      send_alert_to_tg:
        required: false
        type: boolean
        default: false
      test_plan:
        required: true
        type: string

jobs:
  ptt_ui_tests:
    name: PTT UI tests
    if: always() && inputs.run_ptt
    uses: "tutu-ru-mobile/github-workflows/.github/workflows/run_farm_emulator_android_ui_tests.yml@main"
    with:
      branch: ${{ inputs.branch }}
      upload_test_results: ${{ inputs.upload_test_results }}
      is_gradle_cache_debug_enabled: true
      marathon_path: "ptt/ptt_app"
      uploaded_artifact_name: "ptt"
      assemble_task: ":ptt:ptt_app:assembleGoogleStoreDebug"
      assemble_android_test_task: ":ptt:ptt_app:assembleGoogleStoreDebugAndroidTest"
      marathon_clear_package_data: true
      marathon_only_record_snapshots: ${{ inputs.record_snapshots }}
      allure_project_id: "54"
      send_alert_to_tg: ${{ inputs.send_alert_to_tg }}
      test_plan: ${{ inputs.test_plan }}
    secrets:
      github_access_token: ${{ secrets.GITHUB_TOKEN }}
      maven_readonly_token: ${{ secrets.TUTU_READ_PACKAGES_TOKEN }}
      firebase_key: ${{ secrets.GCLOUD_SERVCE_ACCOUNT_JSON }}
      telemetry_url: ${{ secrets.TELEMETRY_URL }}
      telemetry_slug: ${{ secrets.TELEMETRY_SLUG }}
      allure_token: ${{ secrets.ALLURE_TOKEN }}
      tg_chat_id: ${{ secrets.TG_AUTOTEST_CHAT_ID }}
      tg_thread_id: ${{ secrets.TG_AUTOTEST_CHAT_ANDROID_PTT_THREAD_ID }}
      tg_release_token_id: ${{ secrets.RELEASE_TRAIN_TELEGRAM_TOKEN }}

  avia_ui_tests:
    name: Avia UI tests
    if: always() && inputs.run_avia
    uses: "tutu-ru-mobile/github-workflows/.github/workflows/run_farm_emulator_android_ui_tests.yml@main"
    with:
      branch: ${{ inputs.branch }}
      upload_test_results: ${{ inputs.upload_test_results }}
      is_gradle_cache_debug_enabled: true
      marathon_path: "avia_app"
      uploaded_artifact_name: "avia"
      assemble_task: "avia_app:assembleGoogleStoreDebug"
      assemble_android_test_task: "avia_app:assembleGoogleStoreDebugAndroidTest"
      marathon_clear_package_data: true
      marathon_only_record_snapshots: ${{ inputs.record_snapshots }}
      allure_project_id: "16"
      send_alert_to_tg: ${{ inputs.send_alert_to_tg }}
      test_plan: ${{ inputs.test_plan }}
    secrets:
      github_access_token: ${{ secrets.GITHUB_TOKEN }}
      maven_readonly_token: ${{ secrets.TUTU_READ_PACKAGES_TOKEN }}
      firebase_key: ${{ secrets.GCLOUD_SERVCE_ACCOUNT_JSON }}
      telemetry_url: ${{ secrets.TELEMETRY_URL }}
      telemetry_slug: ${{ secrets.TELEMETRY_SLUG }}
      allure_token: ${{ secrets.ALLURE_TOKEN }}
      tg_chat_id: ${{ secrets.TG_AUTOTEST_CHAT_ID }}
      tg_thread_id: ${{ secrets.TG_AUTOTEST_CHAT_ANDROID_MONOAVIA_THREAD_ID }}
      tg_release_token_id: ${{ secrets.RELEASE_TRAIN_TELEGRAM_TOKEN }}

  train_ui_tests:
    name: Train UI tests
    if: always() && inputs.run_train
    uses: "tutu-ru-mobile/github-workflows/.github/workflows/run_farm_emulator_android_ui_tests.yml@main"
    with:
      branch: ${{ inputs.branch }}
      upload_test_results: ${{ inputs.upload_test_results }}
      is_gradle_cache_debug_enabled: true
      marathon_path: "train_app"
      uploaded_artifact_name: "train"
      assemble_task: "train_app:assembleGoogleStoreDebug"
      assemble_android_test_task: "train_app:assembleGoogleStoreDebugAndroidTest"
      marathon_clear_package_data: true
      marathon_only_record_snapshots: ${{ inputs.record_snapshots }}
      allure_project_id: "98"
      send_alert_to_tg: ${{ inputs.send_alert_to_tg }}
      test_plan: ${{ inputs.test_plan }}
    secrets:
      github_access_token: ${{ secrets.GITHUB_TOKEN }}
      maven_readonly_token: ${{ secrets.TUTU_READ_PACKAGES_TOKEN }}
      firebase_key: ${{ secrets.GCLOUD_SERVCE_ACCOUNT_JSON }}
      telemetry_url: ${{ secrets.TELEMETRY_URL }}
      telemetry_slug: ${{ secrets.TELEMETRY_SLUG }}
      allure_token: ${{ secrets.ALLURE_TOKEN }}
      tg_chat_id: ${{ secrets.TG_AUTOTEST_CHAT_ID }}
      tg_thread_id: ${{ secrets.TG_AUTOTEST_CHAT_ANDROID_MONOTRAIN_THREAD_ID }}
      tg_release_token_id: ${{ secrets.RELEASE_TRAIN_TELEGRAM_TOKEN }}

  bus_ui_tests:
    name: Bus UI tests
    if: always() && inputs.run_bus
    runs-on: ubuntu-latest
    steps:
      - name: Stub
        run: echo "No tests found"

    # Пока тестов нет.
    #    uses: "tutu-ru-mobile/github-workflows/.github/workflows/run_farm_emulator_android_ui_tests.yml@main"
    #    with:
    #      branch: ${{ inputs.branch }}
    #      upload_test_results: ${{ inputs.upload_test_results }}
    #      is_gradle_cache_debug_enabled: true
    #      marathon_path: "bus_app"
    #      uploaded_artifact_name: "bus"
    #      assemble_task: "bus_app:assembleGoogleStoreDebug"
    #      assemble_android_test_task: "bus_app:assembleGoogleStoreDebugAndroidTest"
    #      marathon_clear_package_data: true
    #      marathon_only_record_snapshots: ${{ inputs.record_snapshots }}
    #      allure_project_id: "97"
    #      send_alert_to_tg: ${{ inputs.send_alert_to_tg }}
    #      test_plan: ${{ inputs.test_plan }}
    #    secrets:
    #      github_access_token: ${{ secrets.GITHUB_TOKEN }}
    #      maven_readonly_token: ${{ secrets.TUTU_READ_PACKAGES_TOKEN }}
    #      firebase_key: ${{ secrets.GCLOUD_SERVCE_ACCOUNT_JSON }}
    #      telemetry_url: ${{ secrets.TELEMETRY_URL }}
    #      telemetry_slug: ${{ secrets.TELEMETRY_SLUG }}
    #      allure_token: ${{ secrets.ALLURE_TOKEN }}
    #      tg_chat_id: ${{ secrets.TG_AUTOTEST_CHAT_ID }}
    #      tg_thread_id: ${{ secrets.TG_AUTOTEST_CHAT_ANDROID_MONOBUS_THREAD_ID }}
    #      tg_release_token_id: ${{ secrets.RELEASE_TRAIN_TELEGRAM_TOKEN }}